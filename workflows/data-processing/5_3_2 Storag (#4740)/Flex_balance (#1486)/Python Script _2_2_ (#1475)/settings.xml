<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="import pandas as pd%%00010import re%%00010%%00010%%00010# Country_trade zone connections%%00010c_trz=input_table_1.copy()%%00010# Lever constrains for storage technologies%%00010storage_lvrs  = input_table_2.copy()%%00010%%00010PHS_c= storage_lvrs.filter(regex=(&quot;Country|Years|elc_bal-strat_.[H].*&quot;), axis=1)%%00010PHS_c=pd.merge(PHS_c, c_trz, on='Country')%%00010PHS_c.set_axis(['Country', 'Years', 'PHS','Trade_zone'], axis=1, inplace=True)%%00010%%00010other_c=storage_lvrs.filter(regex=(&quot;Country|Years|elc_bal-strat_.[^H].*&quot;), axis=1)%%00010other_c=pd.merge(other_c, c_trz, on='Country')%%00010#other_c.set_axis(['Country', 'Years', 'CAES','Flywheel', 'Battery', 'Ptx','Trade_zone'], axis=1, inplace=True)%%00010other_c.rename(columns={&quot;elc_bal-strat_Battery[TWh]&quot;: &quot;Battery&quot;, &quot;elc_bal-strat_CAES[TWh]&quot;: &quot;CAES&quot;, \%%00010'elc_bal-strat_Flywheel[TWh]': 'Flywheel' , 'elc_bal-strat_Ptx[TWh]' :'Ptx'}, inplace=True)%%00010other_trz=other_c.groupby(['Trade_zone', 'Years'], as_index=False)['CAES','Flywheel', 'Battery', 'Ptx'].first()%%00010#print(other_trz.columns)%%00010%%00010output_table_1=other_trz%%00010output_table_2=PHS_c%%00010%%00010"/>
<entry key="rowLimit" type="xint" value="10000"/>
<entry key="pythonVersionOption" type="xstring" value="PYTHON3"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="python3Command" type="xstring" value=""/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="Lever selection of%%00013%%00010other_str trade zone level%%00013%%00010PHS country level"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="333"/>
<entry key="y-coordinate" type="xint" value="379"/>
<entry key="width" type="xint" value="137"/>
<entry key="height" type="xint" value="45"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="9"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script2in2out.Python2Script2In2OutNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Script (2⇒2)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="3.7.2.v201904170931"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="3.7.2.v201904170931"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Script (2⇒2)"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
<config key="port_2">
<entry key="index" type="xint" value="2"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
