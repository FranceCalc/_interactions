<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="# Copy input to output%%00010output_table = input_table.copy()%%00010%%00010import pandas as pd%%00010input_table.Years = pd.to_numeric(input_table.Years)%%00010df = input_table.set_index(['Years'])%%00010%%00010init = 0%%00010baseyear = 1990%%00010previous_year = baseyear%%00010output_table = input_table.copy();%%00010%%00010#loop through the years%%00010for i in range(baseyear+1,2101): %%00010    #if the year appears in the index, do the calculation%%00010    if i in df.index:%%00010        pat_i = (output_table['Years'] == i)%%00010        pat_prev =(output_table['Years'] == previous_year)%%00010            %%00010        #Land dynamics:%%00010        output_table.loc[pat_i, &quot;lus_land_initial-area_cropland[ha]&quot;] = output_table.loc[pat_prev, &quot;lus_land_cropland[ha]&quot;].values%%00010        output_table.loc[pat_i, &quot;lus_land_initial-area_grassland[ha]&quot;] = output_table.loc[pat_prev, &quot;lus_land_grassland[ha]&quot;].values%%00010        output_table.loc[pat_i, &quot;lus_land_initial-area_forest[ha]&quot;] = output_table.loc[pat_prev, &quot;lus_land_forest[ha]&quot;].values%%00010        output_table.loc[pat_i, &quot;lus_land_initial-area_wetland[ha]&quot;] = output_table.loc[pat_prev, &quot;lus_land_wetland[ha]&quot;].values%%00010        output_table.loc[pat_i, &quot;lus_land_initial-area_settlement[ha]&quot;] = output_table.loc[pat_prev, &quot;lus_land_settlement[ha]&quot;].values%%00010        output_table.loc[pat_i, &quot;lus_land_initial-area_other[ha]&quot;] = output_table.loc[pat_prev, &quot;lus_land_other[ha]&quot;].values%%00010%%00010        previous_year = i%%00010%%00010"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="PYTHON3"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="python3Command" type="xstring" value=""/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="1. Land demand %%00013%%00010evolution [ha] =%%00013%%00010Land demand by type [ha], Y(i+1)%%00013%%00010-%%00013%%00010Land demand by type [ha], Yi"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="1832"/>
<entry key="y-coordinate" type="xint" value="-1521"/>
<entry key="width" type="xint" value="178"/>
<entry key="height" type="xint" value="75"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="9"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script.Python2ScriptNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="3.7.2.v201904170931"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="3.7.2.v201904170931"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
