<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="import pandas as pd%%00010%%00010#output_table = input_table.copy()%%00010input_table.Years = pd.to_numeric(input_table.Years)%%00010df = input_table.set_index(['Years'])%%00010%%00010#filters and units definition%%00010filter_col = [col.split('[',1)[0].split('ots_',1)[1] for col in list(df) if col.startswith('ots')]%%00010unit_hist = &quot;[&quot;+[col.split('[',1)[1].split(']',1)[0] for col in list(df) if col.startswith('ots')][0]+&quot;]&quot;%%00010unit_sc = &quot;[&quot;+[col.split('[',1)[1].split(']',1)[0] for col in list(df) if col.startswith('ll')][0]+&quot;]&quot;%%00010%%00010#initialization%%00010init = 0%%00010previous_year = 2010 # =&gt; TO BE UPDATED (arg in fun ll2fts(.))%%00010%%00010#loop through the years%%00010for i in range(2010,2101): # =&gt; TO BE PARAMETRIZED %%00010%%00009#if the year appears in the index, do the calculation%%00010%%00009if i in df.index:%%00010%%00009%%00009df_i = input_table.loc[input_table['Years'] == i].copy()%%00010%%00009%%00009if init ==0:%%00010%%00009%%00009%%00009for j in range(0,len(filter_col)):%%00010%%00009%%00009%%00009%%00009df_i[&quot;fts_&quot;+filter_col[j]+unit_hist] = df_i[&quot;ots_&quot;+filter_col[j]+unit_hist]*((1-df_i[&quot;ll_&quot;+filter_col[j]+unit_sc])**(i-previous_year))%%00010%%00009%%00009%%00009output_df = df_i%%00010%%00009%%00009%%00009init = 1%%00010%%00009%%00009else:%%00010%%00009%%00009%%00009for j in range(0,len(filter_col)):%%00010%%00009%%00009%%00009%%00009df_i[&quot;fts_&quot;+filter_col[j]+unit_hist] = df_i_old[&quot;fts_&quot;+filter_col[j]+unit_hist].values*((1-df_i[&quot;ll_&quot;+filter_col[j]+unit_sc])**(i-previous_year))%%00010%%00009%%00009%%00009frame = [output_df, df_i]%%00010%%00009%%00009%%00009output_df = pd.concat(frame)%%00010%%00009%%00009previous_year = i%%00010%%00009%%00009df_i_old = df_i%%00010%%00010%%00010output_table = output_df.copy()%%00010output_table.Years = output_table.Years.astype(str)%%00010%%00010#filtering of the data%%00010filter_col = [col for col in list(output_table) if not col.startswith('ll') | col.startswith('ots')]%%00010output_table = output_table[filter_col]"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="PYTHON3"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
<entry key="chunkSize" type="xint" value="500000"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="calculate fts in regard%%00013%%00010to % of increase of ll"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="108"/>
<entry key="y-coordinate" type="xint" value="182"/>
<entry key="width" type="xint" value="117"/>
<entry key="height" type="xint" value="30"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="9"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="EXECUTED"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script.Python2ScriptNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="3.5.0.v201711301743"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="3.5.1.v201712211140"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="hasContent" type="xboolean" value="true"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
<entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
<entry key="port_object_summary" type="xstring" value="Rows: 1044, Cols: 21"/>
<entry key="port_dir_location" type="xstring" value="port_1"/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" value="91217ddb-3dea-47b1-bb3f-d1f31107dbcd"/>
</config>
</config>
